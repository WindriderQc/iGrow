<!DOCTYPE html>
<html lang="en">

<head>
   <%- include('partials/head') %> 
 

 <link rel="stylesheet" type="text/javascript" href="css/YBs.css">

 <script type="text/javascript" src="js/iot.js"></script>
 <script type="text/javascript" src="js/p5.speech.js"></script>
 <script type="text/javascript" src="js/nestor.js"></script>
 
</head>



<body class="fixed-nav sticky-footer bg-light sidenav-toggled" id="page-top">
  
<nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top" id="mainNav">    <%- include('partials/nav') %>  </nav>

<div class="content-wrapper">
    <div class="container-fluid bg-3">  
     
      <div class="row">

              
         <% devices.forEach(sender =>{ %>   
            <div class="row mt-2 col-sm-12">

               <%- include('partials/valueCard', {name: "ID ",                defaultValue: sender, units: "",     smWidth: 2, domID: sender+"id_id"      }); %>  
               <%- include('partials/graph/rssGauge',  { name: "Wifi",              defaultValue: -100,   units: " dBm", smWidth: 3, domID: sender+"rss_id",  divHeight: "120px" }); %>
               <%- include('partials/valueCard', { name: "CPU temperature ",  defaultValue: 0,      units: "Â°C",   smWidth: 2, domID: sender+"temp_id"    }); %>    
               <%- include('partials/valueCard', { name: "Battery",           defaultValue: 0,      units: "v",    smWidth: 2, domID: sender+"batt_id"    }); %>  
               <%- include('partials/valueCard', { name: "Humidity",          defaultValue: 0,      units: "%",    smWidth: 2, domID: sender+"humid_id"   }); %>  
   
      
            
            </div>      
         <% }) %>
      </div>

      <div class="row  mt-2">

         <div class='col-sm-12'>
            <div class="card">
               <div class='card-body'>
                  <div class="row">
                    
                     <div class='col-sm-4'><small><div id='devicesList'></div></small></div>
                     <div class='col-sm-3'><small><div id='statusList'></div></small></div>
                  </div>
               </div>
            </div>
         </div>
      </div>


    

      <div class="mt-2">
  
         <div class="form-group green-border">
            <label for="streamTextArea">Streaming from Esp32(s)</label>
            <textarea class="form-control" id="streamTextArea" rows="32"></textarea>
         </div>

      </div>

      <div class="row mt-2">
         

         <div class="col-sm-12">
            <div class="card">
               <form>
                  <input type='text' id='topic' value='esp32/boot'>
                  <input type='text' id='msg' value='ESP_35030'>
                  <button type='button' onclick=mqttPost()>MQTT Publish</button>   
               </form>
            </div>
         </div>
      
      </div>
   </br>
Esp32 are listening to :</br>
- esp32</br>
- esp32/DEVICE_NAME</br>
</br>
      esp32/DEVICE_NAME/io/on        msg: GPIO</br>
      esp32/DEVICE_NAME/io/off       msg: GPIO</br>
      esp32/DEVICE_NAME/io/sunrise      msg:  GPIO:HH:MM:SS    </br>
      esp32/DEVICE_NAME/io/nightfall    msg:  GPIO:HH:MM:SS    </br>
      esp32/DEVICE_NAME/reboot</br>
      esp32/DEVICE_NAME/config       msg: Stringify->config = [ { io: 2,  mode: "IN", lbl: "A0",  isA: 0, pre: "none" },{ io: 4,  mode: "IN", lbl: "A1",  isA: 0, pre: "none" }]</br>
      </br>
      </br>
      </br>

   </br>

      <div class="row mt-2">
         <div class="col-sm-12">
             <div class="card">
                <div class='card-body'>
                   <select id="devices_select" selected>ESP_35030</select>
                   
 
                   <form class='form-inline' >    
       
                      <div class="form-group form-inline">  
                            <div class='form-text mb-2 mr-2'> <span id="name_label"> </span></div>  
                      </div>
          
                      <select id="io_select" selected>
                         <option value="13">13-Lamp_1</option>
                         <option value="21">21-Lamp_2</option>
                         <option value="5">5-Fan_1</option>
                         <option value="4">4-Heat_1</option>
                         <option value="18">18-Pump_1</option>
                         <option value="19">19-Pump_2</option>
                      </select>
          
                      <div class="form-group form-inline">  
                            <select class="form-control form-inline mb-2 mr-2" id="io_state" name="io_state">
                               <option>ON</option>
                               <option selected>OFF</option>
                            </select>
                      </div>
                      <div class="form-group form-inline">  
                            <button type="button" onClick="sendSetIO()" class="btn btn-primary  mb-2 mr-2">Set IO</button>  
                      </div>
                   
             
                      <input type="hidden" id="sender_id" name="sender" value="">
                      <input type="hidden" id="io_id" name="io_id" value="">
                   </form>
                
                   </div>
             </div>
         </div>
       </div>
   
        
<script>
   
let serv = 'http://' + window.location.hostname //let serv = 'https://' + window.location.hostname    TODO: https
console.log('Server is at: ' + serv)


document.addEventListener("DOMContentLoaded", () => {
  console.log('Document ready  - JS Only')
})

$(()=>{
   console.log('Document ready  - JQUERY')
});

console.log('Devices from ejs: ')
const devicesList = <%- JSON.stringify(devices) %>
console.log(devicesList)

let streamTextArray = []
let latestData
const mqttlogin = JSON.parse('<%- mqttinfo %>')

let iot = new Iot(mqttlogin, devicesList)
iot.mqClient.publish('esp32', 'Browser Client subscribing...')
iot.mqClient.subscribe("esp32/#")
iot.setDevicesListOnList("devicesList", "statusList")
iot.setDevicesListOnSelect('devices_select')

function updateStatus() {    iot.updateStatus()    }
setInterval(updateStatus, 1000)    //  TODO : PKoi ca ne peut pas etre dans le constructor de IoT??   Pkoi on doit avoir une helper function et non utiliser iot.updateStatus?  Both tested but no luck


function mqttPost()
{
   iot.mqClient.publish(document.getElementById('topic').value, document.getElementById('msg').value)
}


function sendSetIO() 
{
   const esp = $("#devices_select>option:selected").text()
   const io_id = $("#io_select>option:selected").val()
   const io_state = $("#io_state>option:selected").text()

   let topic = 'esp32/' + esp + '/io/' + (io_state === 'ON' ? 'on' : 'off')
   const msg = io_id
   console.log('Setting IO: ' + msg)
    
   iot.mqClient.publish(topic, msg)
}
 



iot.mqClient.on('message', (topic, payload) => {

   streamTextArray.push(topic + " : " + payload.toString()) 
   const area = document.getElementById('streamTextArea')
   
   if(area.scrollTop + area.clientHeight == area.scrollHeight) {  // User has scrolled to the bottom of the element
        area.value = streamTextArray.join("\n");
        area.scrollTop = area.scrollHeight
    }
    else  area.value = streamTextArray.join("\n"); 
   
    //console.log('message:', topic)
    if((topic.indexOf("alive") >=0) || (topic.indexOf("data") >=0)) {

 
      try {
            let data = JSON.parse(payload)
            const sender = data.sender
            const timestamp = data.time
            const espSelected = $("#devices_select>option:selected").text() // console.log(moment(timestamp).format('YYYY-MM-DD HH:mm:ss'))
            latestData = data




            if (typeof data.wifi != 'undefined') {
               document.getElementById(sender+'rss_id_value_id').innerHTML =  data.wifi
               document.getElementById(sender+'temp_id_value_id').innerHTML =  data.CPUtemp
            }
            if(typeof data.battery != 'undefined') {
               document.getElementById(sender+'batt_id_value_id').innerHTML =  data.battery
               document.getElementById(sender+'humid_id_value_id').innerHTML =  data.airHumid
            }else{
               console.log(latestData); 
            }

            

         }
         catch(err) {   console.log(payload.toString());  console.log(err)      } 

      }
})

  



</script>




 <!-- End Container  -->
</div>
</div>

<%- include('partials/footer') %>
</body>
</html>
